name: update submodule vendor/optimeta from TIBHannover/optimeta-plugin-shared
env:
  GITHUB_TOKEN: ${{ github.token }}
  GH_USERNAME: ${{ github.actor }}
on:
  # schedule:
  # cron format: minute, hour, day of the month, month, day of the week
  # - cron: "0 6 * * *"
  workflow_dispatch: ~

jobs:
  main_job:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
        
      - name: all further steps
        run: |

          # variables
          echo "variables"
          dateTime=$(date +%Y-%m-%d_%H-%M-%S)
          branchName="update_submodule_optimeta_$dateTime"
          subModuleUrl="https://github.com/TIBHannover/optimeta-plugin-shared"
          subModulePath="vendor/optimeta"
          message="Update $subModulePath from $subModuleUrl ($dateTime)"

          # setup git config username and email
          echo "setup git config username and email: $GH_USERNAME"
          git config user.name "$GH_USERNAME@users.noreply.github.com"
          git config user.email "$GH_USERNAME"
          
          # remove submodule directory recursively
          echo "remove submodule directory recursively: $subModulePath"
          rm -rf vendor/optimeta

          # checkout to new local branch
          echo "checkout to new local branch: $branchName"
          git checkout -b $branchName

          # clone submodule and remove .git directory
          echo "clone submodule and remove .git directory: $subModulePath/.git"
          git clone "$subModuleUrl" "$subModulePath"
          rm -rf "$subModulePath/.git"

          # create $submodulePath/_$dateTime.txt
          echo "create $subModulePath/_$dateTime.txt"
          # touch "$subModulePath/_$dateTime.txt"
          echo "$dateTime" > "$subModulePath/_$dateTime.txt"

          # add submodule directory recursively
          echo "add submodule directory recursively: $subModulePath"
          git add --all $subModulePath

          # commit all changes
          echo "commit all changes"
          git commit -m "$message"

          # push to new branch
          echo "push to new branch: $branchName"
          git push -u origin $branchName

          # create a pull request
          echo "create a pull request"
          gh pr create --title "$message" --body "$message"
          
          # end
          echo "end"
